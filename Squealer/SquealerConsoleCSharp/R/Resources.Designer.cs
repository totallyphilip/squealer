//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyResources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SquealerConsoleCSharp.R.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /***********************************************************************
        ///	Delete deprecated squealer log tables.
        ///***********************************************************************/
        ///
        ///if exists (select 1 from sys.objects where name like &apos;%squealer%&apos;)
        ///	or exists (select 1 from sys.schemas where name = &apos;squealer&apos;)
        ///select 
        ///	s.name
        ///	,o.name
        ///	,o.type_desc
        ///from
        ///	sys.objects o
        ///join
        ///	sys.schemas s
        ///	on s.schema_id = o.schema_id
        ///where
        ///	o.name like &apos;%squealer%&apos;
        ///	or s.name = &apos;squealer&apos;
        ///union
        ///selec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _TopScript {
            get {
                return ResourceManager.GetString("_TopScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @table_id int = {TableId};
        ///
        ///with ctePkCols as
        ///(
        ///	select
        ///		i.object_id as table_id
        ///		,c.column_id
        ///	from
        ///		sys.indexes i
        ///	join
        ///		sys.index_columns c
        ///		on c.object_id = i.object_id
        ///		and c.index_id = i.index_id
        ///	where
        ///		i.is_primary_key = &apos;true&apos;
        ///)
        ///,cteDefaults as
        ///(
        ///	select
        ///		c.parent_object_id as table_id
        ///		,c.parent_column_id as column_id
        ///		,c.definition
        ///	from
        ///		sys.default_constraints c
        ///)
        ///select
        ///	c.name as [column]
        ///	,ty.name as [type]
        ///	,c.is_identity
        ///	,c.is_rowguidcol
        ///	, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AutoGetColumns {
            get {
                return ResourceManager.GetString("AutoGetColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with cteOperations as
        ///(
        ///	select &apos;Insert&apos; as [operation]
        ///	union select &apos;Update&apos;
        ///	union select &apos;Delete&apos;
        ///	union select &apos;Get&apos;
        ///	union select &apos;List&apos;
        ///)
        ///select
        ///	s.name as [schema]
        ///	,t.name as [table]
        ///	,t.object_id as [table_id]
        ///	,o.Operation
        ///from
        ///	sys.tables t
        ///join
        ///	sys.schemas s
        ///	on s.schema_id = t.schema_id
        ///cross join
        ///	cteOperations o
        ///--where
        ///--	s.name like &apos;%&apos; + @schemafilter + &apos;%&apos;
        ///--	and t.name like &apos;%&apos; + @tablefilter + &apos;%&apos;
        ///order by
        ///	s.name
        ///	,t.name
        ///	,o.Operation
        ///.
        /// </summary>
        internal static string AutoGetTables {
            get {
                return ResourceManager.GetString("AutoGetTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;StoredProcedure&quot;&gt;
        ///&lt;Comments&gt;&lt;![CDATA[{Comments}]]&gt;&lt;/Comments&gt;
        ///&lt;Parameters&gt;{Parameters}&lt;/Parameters&gt;
        ///&lt;Code&gt;&lt;![CDATA[{Code}]]&gt;&lt;/Code&gt;
        ///&lt;Users&gt;{Users}&lt;/Users&gt;
        ///&lt;/Squealer&gt;.
        /// </summary>
        internal static string AutoProcTemplate {
            get {
                return ResourceManager.GetString("AutoProcTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.0.11.2
        ///Updated to .NET Framework 4.8.1
        ///Added --NOMAGIC hint. See website for details.
        ///Removed easter egg. Nobody ever found it, so it was just project bloat.
        ///^break
        ///1.0.10.2
        ///Added source repo URL to welcome screen.
        ///Added Squealer version to comments in generated output.
        ///Command prompt now shows current folder if no project name is defined.
        ///Added CD as shortcut to OPEN command.
        ///Shortened error message when Git is not detected.
        ///Fixed a typo in the release notes.
        ///^break
        ///1.0.10.0
        ///Added readonly  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChangeLog {
            get {
                return ResourceManager.GetString("ChangeLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////***********************************************************************
        ///
        ///title : {Schema}.{RootProgramName}
        ///{Comments}
        ///[generated with {SquealerVersion}]
        ///
        ///***********************************************************************/
        ///.
        /// </summary>
        internal static string Comment {
            get {
                return ResourceManager.GetString("Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set nocount on;
        ///
        ///create table #CodeToDrop ([Type] nvarchar(10), [Schema] nvarchar(10), [Name] nvarchar(500));
        ///
        ///{RoutineList}
        ///
        ///with cteObjects as
        ///(
        ///	select
        ///		r.ROUTINE_TYPE as ObjectType
        ///		,r.ROUTINE_SCHEMA as ObjectSchema
        ///		,r.ROUTINE_NAME as ObjectName
        ///	from
        ///		INFORMATION_SCHEMA.ROUTINES r
        ///	union
        ///	select
        ///		&apos;VIEW&apos;
        ///		,v.TABLE_SCHEMA
        ///		,v.TABLE_NAME
        ///	from
        ///		INFORMATION_SCHEMA.VIEWS v
        ///)
        ///select
        ///	o.ObjectType collate database_default as ObjectType
        ///	,o.ObjectSchema collate database_default [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CompareObjects {
            get {
                return ResourceManager.GetString("CompareObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///if object_id(&apos;[{Schema}].[{RootProgramName}]&apos;,&apos;p&apos;) is not null
        ///	drop procedure [{Schema}].[{RootProgramName}];
        ///if object_id(&apos;[{Schema}].[{RootProgramName}]&apos;,&apos;fn&apos;) is not null
        ///	drop function [{Schema}].[{RootProgramName}];
        ///if object_id(&apos;[{Schema}].[{RootProgramName}]&apos;,&apos;if&apos;) is not null
        ///	drop function [{Schema}].[{RootProgramName}];
        ///if object_id(&apos;[{Schema}].[{RootProgramName}]&apos;,&apos;tf&apos;) is not null
        ///	drop function [{Schema}].[{RootProgramName}];
        ///if object_id(&apos;[{Schema}].[{RootProgramName}]&apos;,&apos;v&apos;) is not  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DropAny {
            get {
                return ResourceManager.GetString("DropAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///go
        ///
        ////*
        ///
        ///7/28/2023
        ///	* added .foreign_key_columns
        ///1/3/2023
        ///	* added .key_constraints
        ///11/14/2022
        ///	* added .linked_logins
        ///11/8/2022
        ///	* added .check_constraints
        ///	* added .foreign_keys
        ///9/28/2022
        ///	* added .datepointvalues()
        ///9/21/2022
        ///	* added .daterange()
        ///9/12/2022
        ///	* added .intrange()
        ///	* added .naturalrange()
        ///
        ///*/
        ///
        ///declare @sqldrop varchar(max) =
        ///(
        ///	select string_agg(
        ///		&apos;drop &apos;
        ///		+case o.type
        ///			when &apos;V&apos; then &apos;view&apos;
        ///			when &apos;P&apos; then &apos;procedure&apos;
        ///			when &apos;FN&apos; then &apos;function&apos;
        ///			when  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EzObjects {
            get {
                return ResourceManager.GetString("EzObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///)
        ///
        ///returns {ReturnDataType}
        ///
        ///{WithOptions}
        ///as
        ///begin
        ///set ansi_nulls on;
        ///
        ///declare @Result {ReturnDataType}
        ///
        ///;.
        /// </summary>
        internal static string FN_Begin {
            get {
                return ResourceManager.GetString("FN_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///set ansi_nulls on;
        ///
        ///declare @Result {ReturnDataType};
        ///
        ///;.
        /// </summary>
        internal static string FN_BeginTest {
            get {
                return ResourceManager.GetString("FN_BeginTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create function [{Schema}].[{RootProgramName}]
        ///(
        ///.
        /// </summary>
        internal static string FN_Create {
            get {
                return ResourceManager.GetString("FN_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////***********************************************************************
        ///    Return the function result.
        ///***********************************************************************/
        ///
        ///return @Result
        ///end
        ///.
        /// </summary>
        internal static string FN_End {
            get {
                return ResourceManager.GetString("FN_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////***********************************************************************
        ///    Return the function result.
        ///***********************************************************************/
        ///
        ///select @Result as [Result]
        ///.
        /// </summary>
        internal static string FN_EndTest {
            get {
                return ResourceManager.GetString("FN_EndTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;{RootType}&quot;&gt;
        ///&lt;Parameters&gt;
        ///&lt;!--Parameters--&gt;
        ///&lt;/Parameters&gt;
        ///&lt;Returns Type=&quot;{ReturnDataType}&quot; /&gt;
        ///&lt;Code/&gt;
        ///&lt;Users/&gt;
        ///&lt;/Squealer&gt;
        ///.
        /// </summary>
        internal static string FN_Template {
            get {
                return ResourceManager.GetString("FN_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Folder {
            get {
                object obj = ResourceManager.GetObject("Folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to grant execute on [{Schema}].[{RootProgramName}] to [{User}];.
        /// </summary>
        internal static string GrantExecute {
            get {
                return ResourceManager.GetString("GrantExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to grant select on [{Schema}].[{RootProgramName}] to [{User}];.
        /// </summary>
        internal static string GrantSelect {
            get {
                return ResourceManager.GetString("GrantSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///)
        ///
        ///returns table
        ///
        ///{WithOptions}
        ///as
        ///
        ///return.
        /// </summary>
        internal static string IF_Begin {
            get {
                return ResourceManager.GetString("IF_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;{RootType}&quot;&gt;
        ///&lt;Parameters&gt;
        ///&lt;!--Parameters--&gt;
        ///&lt;/Parameters&gt;
        ///&lt;Code/&gt;
        ///&lt;Users/&gt;
        ///&lt;/Squealer&gt;
        ///.
        /// </summary>
        internal static string IF_Template {
            get {
                return ResourceManager.GetString("IF_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	concat(s.name,&apos;.&apos;,o.name) as object_name
        ///	,o.type
        ///	,m.definition
        ///	,o.object_id
        ///from
        ///	sys.objects o
        ///join
        ///	sys.sql_modules m
        ///	on m.object_id = o.object_id
        ///join
        ///	sys.schemas s
        ///	on s.schema_id = o.schema_id
        ///where
        ///	o.type in (&apos;P&apos;,&apos;FN&apos;,&apos;TF&apos;,&apos;IF&apos;,&apos;V&apos;)
        ///order by
        ///	s.name
        ///	,o.name.
        /// </summary>
        internal static string ObjectList {
            get {
                return ResourceManager.GetString("ObjectList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	p.name parameter_name
        ///	,t.name type_name
        ///	,p.is_output
        ///	,p.max_length
        ///from
        ///	sys.parameters p
        ///join
        ///	sys.types t
        ///	on t.system_type_id = p.system_type_id
        ///where
        ///	p.object_id = @ObjectId
        ///order by
        ///	p.parameter_id.
        /// </summary>
        internal static string ObjectParameters {
            get {
                return ResourceManager.GetString("ObjectParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///--	concat(&apos;[&apos;,s.name,&apos;].[&apos;,o.name,&apos;]&apos;) as object_name
        ///	u.name user_name
        ///from
        ///	sys.objects o
        ///join
        ///	sys.schemas s
        ///	on s.schema_id = o.schema_id
        ///join
        ///	sys.syspermissions p
        ///	on p.id = o.object_id
        ///join
        ///	sys.sysusers u
        ///	on u.uid = p.grantee
        ///where
        ///	o.object_id = @ObjectId.
        /// </summary>
        internal static string ObjectPermissions {
            get {
                return ResourceManager.GetString("ObjectPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////***********************************************************************
        ///	Begin the transaction. Start the TRY..CATCH wrapper.
        ///***********************************************************************/
        ///
        ///              -- !!!!!  DO NOT EDIT THIS SECTION  !!!!! --
        ///
        ///{WithOptions}
        ///as
        ///set ansi_nulls on;
        ///set nocount on;
        ///set quoted_identifier on;
        ///
        ///declare @Squealer_ReturnValue int = 0;
        ///declare @SqlrInternalErrorNumber int; -- for backward compatibility with pre-release squealer
        ///
        ///begin try
        ///	begin tra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string P_Begin {
            get {
                return ResourceManager.GetString("P_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///              -- !!!!!  DO NOT EDIT THIS SECTION  !!!!! --
        ///
        ///{WithOptions}
        ///as
        ///set ansi_nulls on;
        ///set nocount on;
        ///set quoted_identifier on;
        ///
        ///declare @Squealer_ReturnValue int = 0;
        ///declare @SqlrInternalErrorNumber int; -- for backward compatibility with pre-release squealer
        ///
        ///print concat(&apos;begin - ``this`` - nest level is &apos;,@@nestlevel,&apos;; tran count is &apos;,@@trancount,&apos;; xact state is &apos;,xact_state());
        ///
        ////*######################################################################
        ///                        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string P_BeginNoMagic {
            get {
                return ResourceManager.GetString("P_BeginNoMagic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///set ansi_nulls on;
        ///set quoted_identifier on;
        ///
        ///declare @SqlrInternalErrorNumber int = 0; -- Not used in test scripts, but declared to avoid errors.
        ///
        ///begin transaction
        ///
        ////*######################################################################
        ///                         YOUR CODE BEGINS HERE.
        ///######################################################################*/
        ///;.
        /// </summary>
        internal static string P_BeginTest {
            get {
                return ResourceManager.GetString("P_BeginTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create procedure [{Schema}].[{RootProgramName}]
        ///.
        /// </summary>
        internal static string P_Create {
            get {
                return ResourceManager.GetString("P_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*######################################################################
        ///                          YOUR CODE ENDS HERE.
        ///######################################################################*/
        ///
        ////***********************************************************************
        ///	Commit the transaction. If we are in a nested transaction, this
        ///	decrements the transaction count.
        ///***********************************************************************/
        ///
        ///              -- !!!!!  DO NOT EDIT THIS SECTION  !!!!! --
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string P_End {
            get {
                return ResourceManager.GetString("P_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*######################################################################
        ///                          YOUR CODE ENDS HERE.
        ///######################################################################*/
        ///
        ///print concat(&apos;commit - nest level is &apos;,@@nestlevel,&apos;; tran count is &apos;,@@trancount,&apos;; xact state is &apos;,xact_state());
        ///
        ///
        ///if @SqlrInternalErrorNumber is not null
        ///	set @Squealer_ReturnValue = @SqlrInternalErrorNumber -- for backward compatibility with pre-release squealer
        ///
        ///return @Squealer_ReturnValue
        ///.
        /// </summary>
        internal static string P_EndNoMagic {
            get {
                return ResourceManager.GetString("P_EndNoMagic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*######################################################################
        ///                          YOUR CODE ENDS HERE.
        ///######################################################################*/
        ///
        ///-- This script defaults to ROLLBACK so you can repeat your testing.
        ///
        ///rollback transaction
        ///--commit transaction
        ///
        ///print &apos;@SqlrInternalErrorNumber = &apos; + convert(varchar,(@SqlrInternalErrorNumber));
        ///.
        /// </summary>
        internal static string P_EndTest {
            get {
                return ResourceManager.GetString("P_EndTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		set @Squealer_ErrorMessage =
        ///			@Squealer_ErrorMessage
        ///			+ char(10)
        ///			+ &apos;@{ErrorParameterName} = &apos;
        ///			+ isnull(convert(varchar(max),@{ErrorParameterName}),&apos;[NULL]&apos;);.
        /// </summary>
        internal static string P_ErrorParameter {
            get {
                return ResourceManager.GetString("P_ErrorParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;{RootType}&quot;&gt;
        ///&lt;Parameters&gt;
        ///&lt;!--Parameters--&gt;
        ///&lt;/Parameters&gt;
        ///&lt;Code/&gt;
        ///&lt;Users/&gt;
        ///&lt;/Squealer&gt;
        ///.
        /// </summary>
        internal static string P_Template {
            get {
                return ResourceManager.GetString("P_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon PigNose {
            get {
                object obj = ResourceManager.GetObject("PigNose", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///)
        ///
        ///{WithOptions}
        ///as
        ///begin
        ///set ansi_nulls on;
        ///.
        /// </summary>
        internal static string Tf_Begin {
            get {
                return ResourceManager.GetString("Tf_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///)
        ///
        ///set ansi_nulls on;
        ///.
        /// </summary>
        internal static string Tf_BeginTest {
            get {
                return ResourceManager.GetString("Tf_BeginTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///return
        ///end.
        /// </summary>
        internal static string TF_End {
            get {
                return ResourceManager.GetString("TF_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select * from @TableValue;.
        /// </summary>
        internal static string TF_EndTest {
            get {
                return ResourceManager.GetString("TF_EndTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///)
        ///
        ///returns @TableValue table
        ///(
        ///.
        /// </summary>
        internal static string TF_Table {
            get {
                return ResourceManager.GetString("TF_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///declare @TableValue table
        ///(
        ///.
        /// </summary>
        internal static string TF_TableTest {
            get {
                return ResourceManager.GetString("TF_TableTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;{RootType}&quot;&gt;
        ///&lt;Parameters&gt;
        ///&lt;!--Parameters--&gt;
        ///&lt;/Parameters&gt;
        ///&lt;Code/&gt;
        ///&lt;Users/&gt;
        ///&lt;/Squealer&gt;
        ///.
        /// </summary>
        internal static string TF_Template {
            get {
                return ResourceManager.GetString("TF_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (select 1 from ##RetryFailedSquealerItems)
        ///begin
        ///	declare @RetryFailedSquealerItems varchar(max);
        ///	select @RetryFailedSquealerItems = &apos;gen -x &apos; + string_agg(f.ProcName,&apos;|&apos;) from ##RetryFailedSquealerItems f;
        ///	print &apos;Try again?&apos;
        ///	print @RetryFailedSquealerItems
        ///end.
        /// </summary>
        internal static string TrackFailedItems_End {
            get {
                return ResourceManager.GetString("TrackFailedItems_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if object_id(&apos;tempdb..##RetryFailedSquealerItems&apos;) is null
        ///	create table ##RetryFailedSquealerItems (ProcName varchar(100))
        ///else
        ///	truncate table ##RetryFailedSquealerItems
        ///go.
        /// </summary>
        internal static string TrackFailedItems_Start {
            get {
                return ResourceManager.GetString("TrackFailedItems_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;!-- Project name maximum 10 characters (longer names will be truncated). --&gt;
        ///&lt;Settings ProjectName=&quot;myproject&quot;&gt;
        ///	&lt;DefaultUsers&gt;
        ///		&lt;User Name=&quot;User1&quot; /&gt;
        ///		&lt;User Name=&quot;User2&quot; /&gt;
        ///	&lt;/DefaultUsers&gt;
        ///&lt;!-- String replacements are case-sensitive and applied sequentially. Format &quot;$TEXT$&quot; is not required but recommended as a visual cue. --&gt;
        ///	&lt;StringReplacements&gt;
        ///		&lt;String Original=&quot;$YODA-QUOTE$&quot; Replacement=&quot;$AFFIRMATIVE$ or $NEGATORY$. There is no Try.&quot; Comment=&quot;&quot; / [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserConfig {
            get {
                return ResourceManager.GetString("UserConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{WithOptions}
        ///as
        ///.
        /// </summary>
        internal static string V_Begin {
            get {
                return ResourceManager.GetString("V_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create view [{Schema}].[{RootProgramName}]
        ///.
        /// </summary>
        internal static string V_Create {
            get {
                return ResourceManager.GetString("V_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;us-ascii&quot;?&gt;
        ///&lt;Squealer Type=&quot;{RootType}&quot;&gt;
        ///&lt;Code/&gt;
        ///&lt;Users/&gt;
        ///&lt;/Squealer&gt;
        ///.
        /// </summary>
        internal static string V_Template {
            get {
                return ResourceManager.GetString("V_Template", resourceCulture);
            }
        }
    }
}
